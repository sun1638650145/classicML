name: PyPI

on:
  release:
    types: [published, created]

jobs:
  deploy:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11, ubuntu-20.04]
        python-version: ['3.7', '3.8', '3.9', '3.10']
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Before install
      run: |
        # 安装 setuptools, wheel, twine和pybind11
        python3 -m pip install --upgrade pip;
        pip install setuptools wheel twine pybind11==2.9.2;
        # 安装 eigen3
        if [ "${{ matrix.os }}" = "macos-11" ]; then
          rm -rf /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core;
          brew update;
          brew install eigen;
        else
          # ubuntu-20.04下apt安装的最新版本是eigen3.3.7, classicML v0.8需要使用eigen3.4的新特性.
          # 下载源码
          wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz;
          tar -zxvf eigen-3.4.0.tar.gz;
          # 编译安装
          cd eigen-3.4.0;
          mkdir build;
          cd build;
          cmake ..;
          sudo make;
          sudo make install;
          # 返回home目录
          cd ~;
        fi
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python3 setup.py sdist bdist_wheel
        # 修改Linux下的包名
        if [ "${{ matrix.os }}" = "ubuntu-20.04" ]; then
          filename=`ls dist/*.whl`;
          newfilename=${filename/"linux"/"manylinux2010"};
          mv $filename $newfilename;
        fi
        python3 -m twine upload --repository pypi dist/* --skip-existing;
